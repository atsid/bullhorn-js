define("bullhorn/Channel",[],function(){return function(){this.publish=function(e,t){throw new Error("Not Implemented")},this.subscribe=function(e,t,n){throw new Error("Not Implemented")},this.subscribeOnce=function(e,t,n){throw new Error("Not Implemented")},this.unsubscribe=function(){throw new Error("Not Implemented")}}}),define("bullhorn/Logger",[],function(){return function(e,t,n){var r={TRACE:1,DEBUG:2,INFO:3,WARN:4,ERROR:5},i,s=[];e=r[e.toUpperCase()],t||(t=console),typeof n=="undefined"&&(n=""),i=function(e,r,i,o,u){var a=t[e]||t.info;r=n+r;if(o)i?a.call(t,r+" --> "+JSON.stringify(i)):a.call(t,r);else try{u[0]&&(u[0]=n+u[0]),a.apply(t,u)}catch(f){a(r,i,o,u)}s.forEach(function(t){t.log(e,r,i,o)})},this.addPlugin=function(e){s.push(e)},this.trace=function(t,n,s){e<=r.TRACE&&i("debug",t,n,s,arguments)},this.debug=function(t,n,s){e<=r.DEBUG&&i("debug",t,n,s,arguments)},this.info=function(t,n,s){e<=r.INFO&&i("info",t,n,s,arguments)},this.warn=function(t,n,s){e<=r.WARN&&i("warn",t,n,s,arguments)},this.error=function(t,n,s){e<=r.ERROR&&i("error",t,n,s,arguments)},this.time=function(e){t.time.apply(t,arguments)},this.timeEnd=function(e){t.timeEnd.apply(t,arguments)}}}),define("bullhorn/log",["./Logger","module"],function(e,t){return new e(t.config().logLevel||"warn")}),define("bullhorn/Validator",[],function(){return function(){this.validate=function(e,t,n,r){return!0}}}),define("bullhorn/CoreApi",["./log","./Validator"],function(e,t){var n=new t;return function(t){var r={busHash:{},setMessageBus:function(e,t){this.busHash[e]=t},getMessageBus:function(e){var t=this.busHash[e];return t||(t={},this.setMessageBus(e,t)),t},setCallbacks:function(e,t,n){this.getMessageBus(e)[t]=n},getCallbacks:function(e,t){var n=this.getMessageBus(e)[t];return n||(n=[],this.setCallbacks(e,t,n)),n},cropCallbacks:function(e,t,n){var r=this.getCallbacks(e,t);r=r.filter(function(e,t,r){return n(e)}),this.setCallbacks(e,t,r)},unsubscribe:function(e,t,n){this.cropCallbacks(e,t,function(e){return e.cs!==n})}};this.config=t,this.validatingPublish=function(t,r,i,s,o){var u=this.config.resolve(r);e.debug("Validating message for channel ["+r+"]",i),n.validate(i,u,!1),this.nonValidatingPublish(t,r,i,s,o)},this.nonValidatingPublish=function(t,n,i,s,o){var u=r.getCallbacks(t,n);u.some(function(s,u,a){var f=!0,l;e.debug("Checking message for callback in scope ["+s.cs+"]"),typeof s.fp=="function"&&(f=s.fp.call(s.cs,i));if(f&&(s.cs!==o||s.csp===!0))return e.debug("Message passed filter and scope checks. Publishing now.",i),l=s.fn.call(s.cs,i),typeof l!="boolean"&&(l=!1),s.uah===!0&&(e.debug("unsubscribeAfterHandle was true so unsubscribing from scope ["+s.cs+"]"),r.unsubscribe(t,n,s.cs)),l}),typeof s=="function"&&(e.debug("Completion callback present, calling now for message",i),s.call(o))},this.publish=this.nonValidatingPublish,this.subscribe=function(t,n,i,s,o,u,a){var f=r.getCallbacks(t,n);e.debug("Subscribing to channel ["+n+"] on bus ["+t+"] with scope ["+s+"]"),f.push({fn:i,fp:o,cs:s,csp:u,uah:a})},this.unsubscribe=function(t,n,i){e.debug("Unsubscribing from channel ["+n+"] on bus ["+t+"] with scope ["+i+"]"),r.unsubscribe(t,n,i)},this.isValidating=function(){return this.publish===this.validatingPublish},this.validate=function(t){t===!0?(e.info("Turning schema validation on"),this.publish=this.validatingPublish):(e.info("Turning schema validation off"),this.publish=this.nonValidatingPublish)}}}),define("bullhorn/ChannelFactory",["./Channel","./CoreApi","./log"],function(e,t,n){return function(r){var i=[r.resolver],s=function(e,t,n,r,i){e.schema=t,e.publish=function(t,s){r.coreapi.publish(i,e.channelName,t,s,n)},e.unsubscribe=function(){r.coreapi.unsubscribe(i,e.channelName,n)},e.subscribe=function(t,s,o){r.coreapi.subscribe(i,e.channelName,t,n,s,o)},e.subscribeOnce=function(t,s,o){r.coreapi.subscribe(i,e.channelName,t,n,s,o,!0)}};this.resolveSchema=function(e){var t;return i.some(function(n){return t=n(e),t},this),t},this.coreapi=new t({resolve:this.resolveSchema}),this.addResolver=function(e){i.push(e)},this.get=function(t,r,i){var o,u;return typeof i=="undefined"&&(i="global"),n.debug("Getting channel "+t+" on bus "+i+" with scope "+r),o=this.resolveSchema(t),u=new e,u.channelName=t,s(u,o,r,this,i),u},this.validate=function(e){var t="off";e&&(t="on"),n.info("Turning validation "+t),this.coreapi.validate(e)}}});